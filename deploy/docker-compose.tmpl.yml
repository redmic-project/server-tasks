version: '3.5'

services:
  tasks:
    image: ${IMAGE_NAME}:${IMAGE_TAG:-latest}
    environment:
      - MICROSERVICE_NAME
      - MICROSERVICE_PORT
      - SPRING_PROFILES_ACTIVE
      - SPRING_DATASOURCE_USERNAME
      - SPRING_DATASOURCE_PASSWORD
      - JOBS_DATASOURCE_USERNAME
      - JOBS_DATASOURCE_PASSWORD
      - AWS_ACCESS_KEY
      - AWS_SECRET_KEY
      - ELASTIC_XPACKSECURITYUSER
      - JAVA_OPTS=-XX:MaxRAMFraction=2
    networks:
      - elastic-net
      - kafka-net
      - postgres-net
      - redmic-net
      - traefik-net
    volumes:
      - mediastorage-private-vol:/data/MEDIA_STORAGE
      - mediastorage-public-vol:/data/PUBLIC_MEDIA_STORAGE
    healthcheck:
      test: wget --spider -q http://localhost:${MICROSERVICE_PORT}/api/${MICROSERVICE_NAME}/actuator/health
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5m
    deploy:
      mode: replicated
      replicas: 1
      labels:
        traefik.frontend.rule: Host:${PUBLIC_HOSTNAME};PathPrefix:/api/${MICROSERVICE_NAME}
        traefik.backend: ${MICROSERVICE_NAME}
        traefik.port: "${MICROSERVICE_PORT}"
      restart_policy:
        delay: 1m
        window: 3m

networks:
  elastic-net:
    external: true

  kafka-net:
    external: true

  postgres-net:
    external: true

  redmic-net:
    external: true

  traefik-net:
    external: true